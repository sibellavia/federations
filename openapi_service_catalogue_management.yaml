openapi: 3.0.3
info:
  title: Service Inventory Management for federated SMC
  description:  |
    This is the Service Inventory Management OpenAPI specification for federated SMC capability (last update: Sep 08, 2023).
  version: Spiral 5
externalDocs:
  description: Find more info about the federated SMC here
  url: 'https://testsrv.prx.dev.cloud21.pcip.de/APISpec'
servers:
- url: https://mnp.api.host:443/context/serviceInventoryManagement/v5.0
paths:
  /service:
    get:
      tags:
      - service
      summary: List or find Service objects
      description: This operation list or find Service entities
      operationId: listService
      parameters:
        - in: query
          name: filter
          description: Filter query parameter to define a query filter for retrieving only resources which fulfil the filter query based on attribute names, operators and valid attribute values
          schema:
            type: object
            additionalProperties:
              type: string
              maxLength: 128
          style: form
          explode: true
        - in: query
          name: defaultFilter
          description: A process specific default filter is always implicitly set or added to the custom filter. If no custom filter is set and the parameter is set to 'false', no default filter will be set
          schema:
            type: boolean
            default: true
        - in: query
          name: allProviders
          description: Only the records for the 'main' provider will be returned by default. the records for all providers will returned, if the parameter is set to 'true'
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_RetrieveResponseArray'
              examples:
                exampleServiceRetrieveResponseArray:
                  $ref: '#/components/examples/exampleServiceRetrieveResponseArray'
        400:
          $ref: '#/components/responses/http400'
        404:
          $ref: '#/components/responses/http404'
        500:
          $ref: '#/components/responses/http500'        
  /service/{serviceId}:
    get:
      tags:
      - service
      summary: Retrieves a Service by ID
      description: This operation retrieves a Service entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveService
      parameters:
      - name: serviceId
        in: path
        description: Identifier of the Service
        required: true
        schema:
          $ref: '#/components/schemas/SvcId'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_CreateRetrieve'
              examples:
                exampleServiceRetrieveResponse:
                  $ref: '#/components/examples/exampleServiceRetrieveResponse'
        400:
          $ref: '#/components/responses/http400'
        404:
          $ref: '#/components/responses/http404'
        500:
          $ref: '#/components/responses/http500'
  /serviceInstance:
    get:
      tags:
      - serviceInstance
      summary: List or find Service Instance objects
      description: This operation list or find Service Instance entities
      operationId: listServiceInstance
      parameters:
        - in: query
          name: filter
          description: Filter query parameter to define a query filter for retrieving only resources which fulfil the filter query based on attribute names, operators and valid attribute values
          schema:
            type: object
            additionalProperties:
              type: string
          style: form
          explode: true
        - in: query
          name: defaultFilter
          description: A process specific default filter is always implicitly set or added to the custom filter. If no custom filter is set and the parameter is set to 'false', no default filter will be set
          schema:
            type: boolean
            default: true
        - in: query
          name: allProviders
          description: Only the records for the 'main' provider will be returned by default. the records for all providers will returned, if the parameter is set to 'true'
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstance_RetrieveResponseArray'
              examples:
                exampleServiceInstanceRetrieveResponseArray:
                  $ref: '#/components/examples/exampleServiceInstanceRetrieveResponseArray'
        400:
          $ref: '#/components/responses/http400'
        404:
          $ref: '#/components/responses/http404'
        500:
          $ref: '#/components/responses/http500'
  /serviceInstance/{serviceInstanceId}:
    get:
      tags:
      - serviceInstance
      summary: Retrieves a Service Instance by ID
      description: This operation retrieves a Service Instance entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveServiceInstance
      parameters:
      - name: serviceInstanceId
        in: path
        description: Identifier of the Service Instance
        required: true
        schema:
          $ref: '#/components/schemas/SviId'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstance_CreateRetrieve'
              examples:
                exampleServiceInstanceRetrieveResponse:
                  $ref: '#/components/examples/exampleServiceInstanceRetrieveResponse'
        400:
          $ref: '#/components/responses/http400'
        404:
          $ref: '#/components/responses/http404'
        500:
          $ref: '#/components/responses/http500'
  /hub:
    post:
      tags:
      - events subscription
      summary: Register a listener
      description: Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: registerListener
      requestBody:
        description: Data containing the callback endpoint to deliver the information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
            examples:
              exampleEventSubscriptionWithoutQueryRequest:
                $ref: '#/components/examples/exampleEventSubscriptionWithoutQueryRequest'
              exampleEventSubscriptionWithQueryRequest:
                $ref: '#/components/examples/exampleEventSubscriptionWithQueryRequest'
      responses:
        201:
          description: Subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
              examples:
                exampleEventSubscriptionResponse:
                  $ref: '#/components/examples/exampleEventSubscriptionResponse'
        400:
          $ref: '#/components/responses/http400'
        404:
          $ref: '#/components/responses/http404'
        500:
          $ref: '#/components/responses/http500'    
      x-codegen-request-body-name: data
  /hub/{hubId}:
    delete:
      tags:
      - events subscription
      summary: Unregister a listener
      description: Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
      operationId: unregisterListener
      parameters:
        - name: hubId
          in: path
          description: The id of the registered listener
          required: true
          schema:
            $ref: '#/components/schemas/SubId'
      responses:
        204:
          $ref: '#/components/responses/http204'
        400:
          $ref: '#/components/responses/http400'
        404:
          $ref: '#/components/responses/http404'
        500:
          $ref: '#/components/responses/http500'  
  /listener:
    post:
      operationId: notifyListener
      summary: Notifies a listener
      description: Example of a listener for receiving the notification events
      tags:
        - events notification
      requestBody:
        description: The event data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventNotificationRequest'
            examples:
              exampleEventNotificationServiceCreate:
                $ref: '#/components/examples/exampleEventNotificationServiceCreate'
              exampleEventNotificationServiceUpdate:
                $ref: '#/components/examples/exampleEventNotificationServiceUpdate'
              exampleEventNotificationServiceInstanceCreate:
                $ref: '#/components/examples/exampleEventNotificationServiceInstanceCreate'
              exampleEventNotificationServiceInstanceUpdate:
                $ref: '#/components/examples/exampleEventNotificationServiceInstanceUpdate'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventNotificationResponse'
              examples:
                exampleEventNotificationResponse:
                  $ref: '#/components/examples/exampleEventNotificationResponse'
        400:
          $ref: '#/components/responses/http400'
        404:
          $ref: '#/components/responses/http404'
        500:
          $ref: '#/components/responses/http500'
components:
  schemas:
    ### Block with schemas for attachment and note (as real sub resource) - only filled if such schemas are present in this specification
    ### Block with schemas for the main resources including the ones for special operations (like create request, get response, ...)
    Service_CreateRetrieve:
      x-sip-conformance-table-request-column-title: Create Service Notification
      type: object
      required:
      - id
      - description
      - name
      - state
      - federatedServiceExtension
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/SvcId'
        category:
          $ref: '#/components/schemas/SvcCategory'
        description:
          $ref: '#/components/schemas/SvcDescription'
        endDate:
          $ref: '#/components/schemas/SvcEndDate'
        federatedServiceExtension:
          $ref: '#/components/schemas/FederatedServiceExtension_CreateRetrieve'
        name:
          $ref: '#/components/schemas/SvcName'
        place:
          $ref: '#/components/schemas/SvcPlace'
        serviceRelationship:
          $ref: '#/components/schemas/SvcServiceRelationship'
        startDate:
          $ref: '#/components/schemas/SvcStartDate'
        state:
          $ref: '#/components/schemas/ServiceStateType'
      description: 'Service is a base class for defining the Service hierarchy. All
        Services are characterized as either being possibly visible and usable by
        a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService
        and ResourceFacingService.'
    Service_UpdateRequest:
      x-sip-conformance-table-request-column-title: Update Service Notification
      type: object
      required:
      - id
      - federatedServiceExtension
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/SvcId'
        category:
          $ref: '#/components/schemas/SvcCategory'
        description:
          $ref: '#/components/schemas/SvcDescription'
        endDate:
          $ref: '#/components/schemas/SvcEndDate'
        federatedServiceExtension:
          $ref: '#/components/schemas/FederatedServiceExtension_Update'
        name:
          $ref: '#/components/schemas/SvcName'
        place:
          $ref: '#/components/schemas/SvcPlace'
        serviceRelationship:
          $ref: '#/components/schemas/SvcServiceRelationship'
        startDate:
          $ref: '#/components/schemas/SvcStartDate'
        state:
          $ref: '#/components/schemas/ServiceStateType'
      description: 'Service is a base class for defining the Service hierarchy. All
        Services are characterized as either being possibly visible and usable by
        a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService
        and ResourceFacingService.'
    Service_RetrieveResponseArray:
      type: array
      items:
        $ref: '#/components/schemas/Service_CreateRetrieve'
    ServiceInstance_CreateRetrieve:
      x-sip-conformance-table-request-column-title: Create Service Instance Notification
      type: object
      required:
      - id
      - name
      - state
      - federatedServiceInstanceExtension
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/SviId'
        category:
          $ref: '#/components/schemas/SvcCategory'
        description:
          $ref: '#/components/schemas/SvcDescription'
        endDate:
          $ref: '#/components/schemas/SvcEndDate'
        federatedServiceInstanceExtension:
          $ref: '#/components/schemas/FederatedServiceInstanceExtension_CreateRetrieve'
        name:
          $ref: '#/components/schemas/SvcName'
        place:
          $ref: '#/components/schemas/SvcPlace'
        serviceCharacteristic:
          $ref: '#/components/schemas/SvcCharacteristic'
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
        startDate:
          $ref: '#/components/schemas/SvcStartDate'
        state:
          $ref: '#/components/schemas/ServiceInstanceStateType'
        supportingResource:
          $ref: '#/components/schemas/ResourceRefArray'
      description: 'Service is a base class for defining the Service hierarchy. All
        Services are characterized as either being possibly visible and usable by
        a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService
        and ResourceFacingService.'
    ServiceInstance_UpdateRequest:
      x-sip-conformance-table-request-column-title: Update Service Instance Notification
      type: object
      required:
      - id
      - federatedServiceInstanceExtension
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/SviId'
        category:
          $ref: '#/components/schemas/SvcCategory'
        description:
          $ref: '#/components/schemas/SvcDescription'
        endDate:
          $ref: '#/components/schemas/SvcEndDate'
        federatedServiceInstanceExtension:
          $ref: '#/components/schemas/FederatedServiceInstanceExtension_Update'
        name:
          $ref: '#/components/schemas/SvcName'
        place:
          $ref: '#/components/schemas/SvcPlace'
        serviceCharacteristic:
          $ref: '#/components/schemas/SvcCharacteristic'
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
        startDate:
          $ref: '#/components/schemas/SvcStartDate'
        state:
          $ref: '#/components/schemas/ServiceInstanceStateType'
        supportingResource:
          $ref: '#/components/schemas/ResourceRefArray'
      description: 'Service is a base class for defining the Service hierarchy. All
        Services are characterized as either being possibly visible and usable by
        a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService
        and ResourceFacingService.'
    ServiceInstance_RetrieveResponseArray:
      type: array
      items:
        $ref: '#/components/schemas/ServiceInstance_CreateRetrieve'
    ### Block with schemas existing in original TMF specification
    CharacteristicSip:
    # TODO: Add custom tag to use name 'Characteristic' instead of 'CharacteristicSip' in SIP
      required:
      - id
      - name
      - value
      - valueType
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: Unique identifier of the characteristic
          pattern: '^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}-SPC-[a-zA-Z0-9_-]{1,48}$'
        name:
          type: string
          maxLength: 100
          description: Name of the characteristic
        value:
          description: The value of the characteristic
          # Hint: Usage of more restriced type instead of '$ref: '#/components/schemas/Any' to allow better validation in subtypes
          # type: number
          oneOf:
          - type: string
          - type: boolean
          - type: number
          # - type: integer must be omitted, because an integer value matches type number and integer
        # valueType not really needed, because it's implicite defined by the JSON value (tring: "theString", boolean: true|false, number: numeric value without quotation mark). But left in spec as defined in TM Forum spec.
        valueType:
          type: string
          description: A kind of value that the characteristic can take on, such as numeric, text and so forth
          enum:
            - string
            - boolean
            - number
            - integer
      description: Describes a given characteristic of an object or entity through
        a name/value pair.          
    Characteristic:
     # $ref: '#/components/schemas/CharacteristicTypeNumber'
      oneOf:
        - $ref: '#/components/schemas/CharacteristicTypeString'
        - $ref: '#/components/schemas/CharacteristicTypeBoolean'
        - $ref: '#/components/schemas/CharacteristicTypeNumber'
        - $ref: '#/components/schemas/CharacteristicTypeInteger'  
    CharacteristicTypeString:
      allOf:
        - $ref: '#/components/schemas/CharacteristicSip'
        - properties:
            value:
              type: string
              description: The string variant of value
              maxLength: 1024
            valueType:
              type: string
              enum:
                - string
    CharacteristicTypeBoolean:
      allOf:
        - $ref: '#/components/schemas/CharacteristicSip'
        - properties:
            value:
              type: boolean
            valueType:
              type: string
              enum:
                - boolean
    CharacteristicTypeNumber:
      allOf:
        - $ref: '#/components/schemas/CharacteristicSip'
        - properties:
            value:
              type: number 
            valueType:
              type: string
              description: A kind of value that the characteristic can take on, such as numeric, text and so forth
              enum:
                - number
    CharacteristicTypeInteger:
      allOf:
        - $ref: '#/components/schemas/CharacteristicSip'
        - properties:
            value:
              type: integer 
              format: int32
            valueType:
              type: string
              description: A kind of value that the characteristic can take on, such as numeric, text and so forth
              enum:
                - integer
    RelatedPlaceRefOrValue:
      required:
      - id
      - role
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: Unique identifier of the related place.
          maxLength: 64
          pattern: '^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}-(GAD|GLO|GSI)-[a-zA-Z0-9_-]{1,48}$'
        role:
          type: string
          enum:
            - serviceProvidingLocation
            - serviceConsumingLocation
      description: Related Entity reference. A related place defines a place described
        by reference or by value linked to a specific entity. The polymorphic attributes
        @type, @schemaLocation & @referredType are related to the place entity and
        not the RelatedPlaceRefOrValue class itself
    ResourceRefArray:
      type: array
      items:
        $ref: '#/components/schemas/ResourceRef'
    ResourceRef:
      required:
      - id
      - relationshipType
      - '@referredType'
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/FciId'
        relationshipType:
          type: string
          description: Specifies the relationship of the resource to the Service Instance. Must be valid with type of related resource.
          enum:
            - accessedVia
            - composedOf
            - requires
            - runsOn
            - memberOf
            - dependsOn
            - connectsTo
            - relatesTo
        '@referredType':
          type: string
          description: The actual type of the target instance when needed for disambiguation.
          enum:
            - API
            - Database
            - Middleware
            - Software
            - ComputerSystem
            - Cluster
            - NetworkDevice
            - NetworkInterface
            - FQDN
            - PhysikalServer
            - Device
            - Generic
    ServiceRefOrValue:
      required:
      - id
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/SvcId'
      description: A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself
    ServiceRelationship:
      required:
      - relationshipType
      - service
      type: object
      additionalProperties: false
      properties:
        relationshipType:
          type: string
          enum:
          - reliesOn
          description: 'The type of relationship. In fmn always "reliesOn".'
        service:
          $ref: '#/components/schemas/ServiceRefOrValue'
      description: A collection of Services that rely on this Service. For Services, there may not be a related service, but if there is, the relationship type is "reliesOn". If a relationship with a Service exists the complex type "service" must be specified.'
    ServiceInstanceRelationshipArray:
      type: array
      items:
        $ref: '#/components/schemas/ServiceInstanceRelationship'
    ServiceInstanceRelationship:
      required:
      - relationshipType
      - serviceInstance
      type: object
      additionalProperties: false
      properties:
        relationshipType:
          type: string
          enum:
          - dependsOn
          - memberOf
          - runsOn
          - connectsTo
          description: The type of relationship.
        serviceInstance:
          $ref: '#/components/schemas/ServiceInstanceRef'
      description: A collection of Service Instances that rely on this Service Instance. 
    ServiceInstanceRef:
      required:
      - id
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/SviId'
      description: Existing Service Instances defined by reference. Related Service Instances must already exist in the Service inventory.          
    ServiceSpecificationRef:
      required:
      - id
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/SspId'
      description: |-
        ServiceSpecification is a class that offers characteristics to describe a type of service.
        Functionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics.
    ServiceStateType:
      type: string
      description: 'Valid values for the lifecycle state of the service. Note: The states feasibilityChecked, designed, reserved are defined for conformance reasons but will be igored in fmn.'
      enum:
      - inactive
      - active
      - terminated
    ServiceInstanceStateType:
      type: string
      description: Valid values for the lifecycle state of the service instance
      enum:
      - planned
      - ordered
      - stored
      - setup
      - operational
      - maintenance
      - phaseOut
      - retired
    ServiceC3Taxonomy:
      type: object
      x-sip-conformance-table-expand: true
      description: The C3 Taxonomy represents the concepts and their relationships involved in all the life cycle activities for NATO's (C3) capabilities. 
      required:
        - c3TaxonomyVersion
        - c3TaxonomyId
        - c3TaxonomyName
      additionalProperties: false
      properties:
        c3TaxonomyId:
          description: Specifies the guid of the C3 Taxonomy used.
          type: string
          maxLength: 39
        c3TaxonomyName:
          description: Specifies the name of the C3 Taxonomy.
          type: string
          maxLength: 100   
        c3TaxonomyVersion:
          description: Specifies the version of the C3 Taxonomy used within the following C3TaxonomyLevel attributes.
          type: string
          maxLength: 6 
    ### Block with schemas for publish/subscribe - only filled if such schemas are present in this specification
    EventSubscription:
      description: Sets the communication endpoint address the service instance must use to deliver notification information    
      required:
      - callback
      - id
      type: object
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/SubId'
        callback:
          description: The callback being registered.
          type: string
          maxLength: 2048
          format: uri
        query:
          description: additional data to be passed
          type: string
          maxLength: 2048
        resource:
          description: As default, a subscription is set for all resources. If a subscription should be set for only one of the resources or a subscription filter query is used, the resource must be set
          type: string
          enum:
            - Service
            - ServiceInstance  
    # SMC comment: EventSubscriptionInput removed (id required for Request and therefor equals to EventSubscription)
    # SMC comment: ChangeRequestCreateEvent, ChangeRequestStatusChangeEvent, ChangeRequestAttributeValueChangeEvent, ChangeRequestApprovalRequiredEvent, ChangeRequestDeleteEvent removed (using old style notification pattern)
    EventNotification:
      type: object
      required:
        - eventType
        - eventTime
        - eventId
        - event
      additionalProperties: false
      properties:
        eventType:
          $ref: '#/components/schemas/EventNotificationType'
        eventTime:
          description: Date and time when the event was published.
          type: string
          format: date-time
          pattern: '^[1-2]\d{3}-[0-1]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d{3}Z$'
        eventId:
          description: The unique identifier of the published event.
          type: string
          maxLength: 64
          pattern: '^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}-PUB-[a-zA-Z0-9_-]{1,48}$'
        event:
          description: A JSON object. The resource payload.
          type: object
    EventNotificationType:
      description: Specifies the type of event that is published.
      type: string
      enum:
        - ServiceCreateEvent
        - ServiceAttributeValueChangeEvent
        - ServiceInstanceCreateEvent
        - ServiceInstanceAttributeValueChangeEvent
    EventNotificationRequest:
      oneOf:
        - $ref: '#/components/schemas/EventNotificationCreateService'
        - $ref: '#/components/schemas/EventNotificationUpdateService'
        - $ref: '#/components/schemas/EventNotificationCreateServiceInstance'
        - $ref: '#/components/schemas/EventNotificationUpdateServiceInstance'
    EventNotificationCreateService:
      allOf:
        - $ref: '#/components/schemas/EventNotification'
        - properties:
            eventType:
              type: string
              enum:
                - ServiceCreateEvent
            eventTime:
              type: string
            eventId:
              type: string
            event:
              additionalProperties: false
              properties:
                service:
                   $ref: '#/components/schemas/Service_CreateRetrieve' 
    EventNotificationUpdateService:
      allOf:
        - $ref: '#/components/schemas/EventNotification'
        - properties:
            eventType:
              type: string
              enum:
                - ServiceAttributeValueChangeEvent
            event:
              additionalProperties: false
              properties:
                service:
                   $ref: '#/components/schemas/Service_UpdateRequest'
    EventNotificationCreateServiceInstance:
      allOf:
        - $ref: '#/components/schemas/EventNotification'
        - properties:
            eventType:
              type: string
              enum:
                - ServiceInstanceCreateEvent
            event:
              additionalProperties: false
              properties:
                serviceInstance:
                   $ref: '#/components/schemas/ServiceInstance_CreateRetrieve' 
    EventNotificationUpdateServiceInstance:
      allOf:
        - $ref: '#/components/schemas/EventNotification'
        - properties:
            eventType:
              type: string
              enum:
                - ServiceInstanceAttributeValueChangeEvent
            event:
              additionalProperties: false
              properties:
                serviceInstance:
                   $ref: '#/components/schemas/ServiceInstance_UpdateRequest'
    EventNotificationResponse:
      additionalProperties: false
      properties: {}
    ### Block with schemas for error handling
    Error:
      description: Error representation
      required:
      - code
      - reason
      type: object
      additionalProperties: false
      properties:
        code:
          description: Application related code (as defined in the API or from a common list)
          type: string
          maxLength: 7
          pattern: '^[0-9]{3}-[0-9]{3}$'
        reason:
          description: Text that explains the reason for error. This can be shown to a client user.
          type: string
          maxLength: 4096
        message:
          description: Text that provides more details and corrective actions related to the error. This can be shown to a client user.
          type: string
          maxLength: 4096
        status:
          description: Http error code
          type: string
          maxLength: 3
          pattern: '^[0-9]{3}$'
        referenceError:
          description: URL pointing to documentation describing the error
          type: string
          maxLength: 1024
    ### Block with schemas for extensions
    FederatedServiceExtension_CreateRetrieve:
      x-sip-conformance-table-expand: true
      x-custom-comment-fsmc: New type explicite for federated extension properties
      x-custom-comment-todo: Fill out description attribute
      type: object
      description: Extended attributes for federated mission network operations
      required:
        - lastUpdate
        - serviceC3Taxonomy
        - securityMarking
      additionalProperties: false
      properties:
        consumer:
          $ref: '#/components/schemas/ConsumerArray'
        lastUpdate:
          $ref: '#/components/schemas/SvcLastUpdate'
        poc:
          $ref: '#/components/schemas/Poc'
        securityMarking:
          $ref: '#/components/schemas/SecurityMarking'
        serviceC3Taxonomy:
          $ref: '#/components/schemas/ServiceC3Taxonomy'
    FederatedServiceExtension_Update:
      x-sip-conformance-table-expand: true
      x-custom-comment-fsmc: New type explicite for federated extension properties
      x-custom-comment-todo: Fill out description attribute
      type: object
      description: Extended attributes for federated mission network operations
      required:
        - lastUpdate
        - securityMarking
      additionalProperties: false
      properties:
        consumer:
          $ref: '#/components/schemas/ConsumerArray'
        lastUpdate:
          $ref: '#/components/schemas/SvcLastUpdate'
        poc:
          $ref: '#/components/schemas/Poc'
        securityMarking:
          $ref: '#/components/schemas/SecurityMarking'
        serviceC3Taxonomy:
          $ref: '#/components/schemas/ServiceC3Taxonomy'
    FederatedServiceInstanceExtension_CreateRetrieve:
    # TODO ist doch identisch mit FederatedServiceInstanceExtension_Update ?
      x-sip-conformance-table-expand: true
      x-custom-comment-fsmc: New type explicite for federated extension properties
      x-custom-comment-todo: Fill out description attribute
      type: object
      description: Extended attributes for federated mission network operations
      required:
        - instanceOf
        - lastUpdate
        - securityMarking
      additionalProperties: false
      properties:
        consumer:
          $ref: '#/components/schemas/ConsumerArray'
        instanceOf:
          $ref: '#/components/schemas/SvcId'
        lastUpdate:
          $ref: '#/components/schemas/SviLastUpdate'
        plannedMaintenanceEnd:
          $ref: '#/components/schemas/SviPlannedMaintenanceEnd'
        plannedMaintenanceStart:
          $ref: '#/components/schemas/SviPlannedMaintenanceStart'
        poc:
          $ref: '#/components/schemas/Poc'
        securityMarking:
          $ref: '#/components/schemas/SecurityMarking'
        serviceInstanceRelationship:
          $ref: '#/components/schemas/ServiceInstanceRelationshipArray'
    FederatedServiceInstanceExtension_Update:
      x-sip-conformance-table-expand: true
      x-custom-comment-fsmc: New type explicite for federated extension properties
      x-custom-comment-todo: Fill out description attribute
      type: object
      description: Extended attributes for federated mission network operations
      required:
        - instanceOf
        - lastUpdate
        - securityMarking
      additionalProperties: false
      properties:
        consumer:
          $ref: '#/components/schemas/ConsumerArray'
        instanceOf:
          $ref: '#/components/schemas/SvcId'
        lastUpdate:
          $ref: '#/components/schemas/SviLastUpdate'
        plannedMaintenanceEnd:
          $ref: '#/components/schemas/SviPlannedMaintenanceEnd'
        plannedMaintenanceStart:
          $ref: '#/components/schemas/SviPlannedMaintenanceStart'
        poc:
          $ref: '#/components/schemas/Poc'
        securityMarking:
          $ref: '#/components/schemas/SecurityMarking'    
        serviceInstanceRelationship:
          $ref: '#/components/schemas/ServiceInstanceRelationshipArray'
    ### Block with schemas for security marking
    SecurityMarking:
      type: object
      description: Confidentiality marking of the resource as classified by the author (originator) according to STANAG 4774.
      required:
        - securityClassification
        - securityPolicy
      additionalProperties: false
      properties:
        releasabilityCommunity:
          description: See STANAG 4774 for detailed description and specification. List of countries/communities (3-digit abbreviation or community name, separated by comma) which are allowed to read or update this incident
          type: string
          maxLength: 256
        securityClassification:
          description: See STANAG 4774 for detailed description and specification. Indicates the security classification in combination to the security policy.
          type: string
          maxLength: 32
        securityPolicy:
          description: See STANAG 4774 for detailed description and specification. Indicates the scope of the security policy. Examples are well known policy names like NATO, a country (e.g. DEU) or a mission identifier (e.g. ISAF) or exercise name (e.g. CWIX22).
          type: string
          maxLength: 32
    ### Block with complex schemas new inserted for FSMC (without process abbreviation prefix)
    Poc:
      type: string
      maxLength: 256
      description: The point of contact or responsible person or group for the item.
    ConsumerArray:
      type: array
      description: A list of systems consuming the service in the SMC Provider System ID format
      items:
        $ref: '#/components/schemas/Consumer'
    Consumer:
      type: object
      required:
        - id
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/SysId' 
    ### Block with common primitive schemas new inserted for FSMC (with common abbreviation prefix)
    SubId:
      type: string
      description: Id of the listener
      maxLength: 64
      pattern: '^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}-SUB-[a-zA-Z0-9_-]{1,48}$'            
    SysId:
      type: string
      description: Id of a consumer or provider
      maxLength: 11
      pattern: '^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}$'    
    ### Block with primitive schemas new inserted for FSMC (with process abbreviation prefix)        
    SvcId:
      type: string
      description: Unique identifier of the service
      maxLength: 64
      pattern: '^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}-SVC-[a-zA-Z0-9_-]{1,48}$'
    SvcCategory:
      type: string
      description: Is it a customer facing or resource facing service
      maxLength: 100
    SvcDescription:
      type: string
      description: Free-text description of the service
      maxLength: 32768
    SvcEndDate:
      type: string
      description: Date when the service ends
      format: date-time
      pattern: '^[1-2]\d{3}-[0-1]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d{3}Z$'
    SvcLastUpdate:
      description: Date and time when the service was last updated
      type: string
      format: date-time
      pattern: '^[1-2]\d{3}-[0-1]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d{3}Z$'
    SvcName:
      type: string
      description: Name given to this resource
      maxLength: 100
    SvcStartDate:
      type: string
      description: Date when the service starts
      format: date-time
      pattern: '^[1-2]\d{3}-[0-1]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d{3}Z$'
    SvcPlace:
      type: array
      description: A list of places (Place [*]). Used to define a place useful
        for the service (for example a geographical place whre the service is
        installed)
      items:
        $ref: '#/components/schemas/RelatedPlaceRefOrValue'
    SvcServiceRelationship:
      type: array
      description: A list of service relationships (ServiceRelationship [*]).
        Describes links with other service(s) in the inventory.
      items:
        $ref: '#/components/schemas/ServiceRelationship'
    SvcCharacteristic:
      type: array
      description: 'A list of characteristics that characterize this service (ServiceCharacteristic[*]) '
      items:
        $ref: '#/components/schemas/Characteristic'
    ### Block with primitive schemas new inserted for FSMC (with process abbreviation prefix for other processes) - only filled if such schemas are present in this specification
    SviId:
      type: string
      description: Unique identifier of the service instance
      maxLength: 64
      pattern: '^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}-SVI-[a-zA-Z0-9_-]{1,48}$'
    SviLastUpdate:
      description: Date and time when the service instance was last updated
      type: string
      format: date-time
      pattern: '^[1-2]\d{3}-[0-1]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d{3}Z$'
    SviPlannedMaintenanceStart:
      description: Scheduled start date and time of a maintenance outage.
      type: string
      format: date-time
      pattern: '^[1-2]\d{3}-[0-1]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d{3}Z$'
    SviPlannedMaintenanceEnd:
      description: Scheduled end date and time of a maintenance outage.
      type: string
      format: date-time
      pattern: '^[1-2]\d{3}-[0-1]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d{3}Z$'
    SspId:
      type: string
      description: Identifier of a Service Specification entry.
      maxLength: 64
      pattern: '^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}-SSP-[a-zA-Z0-9_-]{1,48}$'
    FciId:
      type: string
      description: Identifier of a Resource Inventory entry.
      maxLength: 64
      pattern: '^[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}-FCI-[a-zA-Z0-9_-]{1,48}$'
  responses:
    http204:
      description: No Content
    http400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            exampleError400:
              $ref: '#/components/examples/exampleError400'
    http404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            exampleError404:
              $ref: '#/components/examples/exampleError404'
    http500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            exampleError500:
              $ref: '#/components/examples/exampleError500'
  examples:
    ################ Examples for service ################
    exampleServiceRetrieveResponse:
      summary: Retrieve Service by id (CIS Service)
      value:
        category: labelling
        description: Service for test reasons
        id: TST-MNP-002-SVC-BWA403
        name: Platform Labelling Service
        startDate: '2022-03-30T23:22:00.000Z'
        endDate: '2023-03-30T21:22:00.000Z'
        state: active
        place:
        - id: TST-MNP-002-GAD-12345
          role: serviceProvidingLocation
        serviceRelationship:
        - relationshipType: reliesOn
          service:
            id: TST-MNP-002-SVC-12345
        federatedServiceExtension:
          lastUpdate: '2022-03-30T21:22:00.000Z'
          poc: person@organization.org
          consumer:
          - id: TST-MNP-003
          serviceC3Taxonomy:
            c3TaxonomyVersion: '5'
            c3TaxonomyId: id-6226703b-0575-4d13-a350-a7913ad83f3b
            c3TaxonomyName: Platform CIS Security Services
          securityMarking:
            securityPolicy: NATO
            securityClassification: UNCLASSIFIED
            releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only
    exampleServiceRetrieveResponseArray:
      summary: List Services
      value:
        - category: labelling
          description: Service for test reasons
          id: TST-MNP-002-SVC-BWA403
          name: Platform Labelling Service
          startDate: '2022-03-30T23:22:00.000Z'
          endDate: '2023-03-30T21:22:00.000Z'
          state: active
          place:
          - id: TST-MNP-002-GAD-12345
            role: serviceProvidingLocation
          serviceRelationship:
          - relationshipType: reliesOn
            service:
              id: TST-MNP-002-SVC-12345
          federatedServiceExtension:
            lastUpdate: '2022-03-30T21:22:00.000Z'
            poc: person@organization.org
            consumer:
            - id: TST-MNP-003
            serviceC3Taxonomy:
              c3TaxonomyVersion: '5'
              c3TaxonomyId: id-6226703b-0575-4d13-a350-a7913ad83f3b
              c3TaxonomyName: Platform CIS Security Services
            securityMarking:
              securityPolicy: NATO
              securityClassification: UNCLASSIFIED
              releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only
        - category: itsm
          description: IT Service Management Environment
          id: TST-MNP-002-SVC-123457
          name: IT Service Management
          startDate: '2022-04-30T23:22:00.000Z'
          endDate: '2023-04-30T21:22:00.000Z'
          state: active
          place:
          - id: TST-MNP-002-GAD-12345
            role: serviceProvidingLocation
          - id: TST-MNP-003-GAD-12345
            role: serviceConsumingLocation
          serviceRelationship:
          - relationshipType: reliesOn
            service:
              id: TST-MNP-002-SVC-123456
          federatedServiceExtension:
            lastUpdate: '2022-03-29T21:22:00.000Z'
            consumer:
            - id: TST-MNP-003
            serviceC3Taxonomy:
              c3TaxonomyVersion: '5'
              c3TaxonomyId: id-d46e44a9-17df-4751-9d70-a42676e18dd3
              c3TaxonomyName: COI-Enabling Services
            securityMarking:
              securityPolicy: NATO
              securityClassification: UNCLASSIFIED
              releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only
    exampleServiceInstanceRetrieveResponse:
      summary: Retrieve Service Instance by id
      value:
        category: labelling
        description: Service for test reasons
        id: TST-MNP-002-SVI-BWA403-001
        name: Platform Labelling Service
        startDate: '2022-03-30T23:22:00.000Z'
        endDate: '2023-03-30T21:22:00.000Z'
        state: operational
        place:
        - id: TST-MNP-002-GAD-12345
          role: serviceProvidingLocation
        - id: TST-MNP-003-GAD-123456
          role: serviceConsumingLocation
        serviceSpecification:
          id: TST-MNP-002-SSP-ABC0123456789
        serviceCharacteristic:
        - id: TST-MNP-002-SPC-1234
          name: systemName
          valueType: string
          value: MN Labelling Instance A
        - id: TST-MNP-002-SPC-1235
          name: maximumRequestsPerSecond
          valueType: number
          value: 100
        supportingResource:
        - id: TST-MNP-003-FCI-1234
          relationshipType: accessedVia
          "@referredType": API
        federatedServiceInstanceExtension:
          instanceOf: TST-MNP-002-SVC-BAW403
          lastUpdate: '2022-03-30T21:22:00.000Z'
          plannedMaintenanceStart: '2022-04-03T21:22:00.000Z'
          plannedMaintenanceEnd: '2022-04-04T21:22:00.000Z'
          poc: person@organization.org
          consumer:
          - id: TST-MNP-003
          - id: TST-MNP-031
          securityMarking:
            securityPolicy: NATO
            securityClassification: UNCLASSIFIED
            releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only
    exampleServiceInstanceRetrieveResponseArray:
      summary: List Service Instances
      value:
        - category: labelling
          description: Service for test reasons
          id: TST-MNP-002-SVI-BWA403-001
          name: Platform Labelling Service
          startDate: '2022-03-30T23:22:00.000Z'
          endDate: '2023-03-30T21:22:00.000Z'
          state: operational
          place:
          - id: TST-MNP-002-GAD-12345
            role: serviceProvidingLocation
          - id: TST-MNP-003-GAD-123456
            role: serviceConsumingLocation
          serviceSpecification:
            id: TST-MNP-002-SSP-ABC0123456789
          serviceCharacteristic:
          - id: TST-MNP-002-SPC-1234
            name: systemName
            valueType: string
            value: MN Labelling Instance A
          - id: TST-MNP-002-SPC-1235
            name: maximumRequestsPerSecond
            valueType: number
            value: 100
          supportingResource:
          - id: TST-MNP-003-FCI-1234
            relationshipType: accessedVia
            "@referredType": API
          federatedServiceInstanceExtension:
            instanceOf: TST-MNP-002-SVC-BAW403
            lastUpdate: '2022-03-30T21:22:00.000Z'
            plannedMaintenanceStart: '2022-04-03T21:22:00.000Z'
            plannedMaintenanceEnd: '2022-04-04T21:22:00.000Z'
            poc: person@organization.org
            consumer:
            - id: TST-MNP-003
            - id: TST-MNP-031
            securityMarking:
              securityPolicy: NATO
              securityClassification: UNCLASSIFIED
              releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only
        - id: TST-MNP-002-SVI-BWA403-002
          name: Platform Labelling Service
          state: operational
          federatedServiceInstanceExtension:
            instanceOf: TST-MNP-002-SVC-BAW403
            lastUpdate: '2022-03-30T21:22:00.000Z'
            consumer:
            - id: TST-MNP-003
            securityMarking:
              securityPolicy: NATO
              securityClassification: UNCLASSIFIED
              releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only   
    ################ Examples for subscriptions ################
    exampleEventSubscriptionWithoutQueryRequest:
      summary: Create Subscription w/o Filter 
      value:
        id: TST-MNP-001-SUB-12345
        callback: https://mnp.api.host:443/context/serviceInventoryManagement/v5.0/listener    
    exampleEventSubscriptionWithQueryRequest:
      summary: Create Subscription with Filter (and concrete resource)
      value:
        id: TST-MNP-001-SUB-12345
        callback: https://mnp.api.host:443/context/serviceInventoryManagement/v5.0/listener
        resource: Service
        query: id.eq=TST-MNP-002-SVC-12345
    exampleEventSubscriptionResponse:
      summary: Create Subscription response
      value:
        id: TST-MNP-001-SUB-12345
        callback: https://mnp.api.host:443/context/serviceInventoryManagement/v5.0/listener       
    ################ Examples for notifications ################
    exampleEventNotificationServiceCreate:
      summary: Example for a create Service Notification
      value:
        eventType: ServiceCreateEvent
        eventTime: '2019-02-26T15:38:27.248Z'
        eventId: TST-MNP-002-PUB-1931744701538
        event:
          service:
            id: TST-MNP-002-SVC-BWA403
            description: Service for test reasons
            name: Platform Labelling Service
            state: active
            federatedServiceExtension:
              lastUpdate: '2022-03-30T21:22:00.000Z'
              serviceC3Taxonomy:
                c3TaxonomyVersion: '5'
                c3TaxonomyId: id-6226703b-0575-4d13-a350-a7913ad83f3b
                c3TaxonomyName: Platform CIS Security Services
              securityMarking:
                securityPolicy: NATO
                securityClassification: UNCLASSIFIED
                releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only
    exampleEventNotificationServiceUpdate:
      summary: Example for an update Service Notification
      value:
        eventType: ServiceAttributeValueChangeEvent
        eventTime: '2019-02-26T16:38:27.248Z'
        eventId: TST-MNP-002-PUB-1931744701539
        event:
          service:
            id: TST-MNP-002-SVC-BWA403
            state: inactive
            federatedServiceExtension:
              lastUpdate: '2022-03-30T21:22:00.000Z'
              securityMarking:
                securityPolicy: NATO
                securityClassification: UNCLASSIFIED
                releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only
    exampleEventNotificationServiceInstanceCreate:
      summary: Example for a create Service Instance Notification
      value:
        eventType: ServiceInstanceCreateEvent
        eventTime: '2019-02-26T17:38:27.248Z'
        eventId: TST-MNP-002-PUB-19317447700
        event:
          serviceInstance:
            id: TST-MNP-002-SVI-BWA403-002
            name: Platform Labelling Service
            state: operational
            federatedServiceInstanceExtension:
              instanceOf: TST-MNP-002-SVC-BAW403
              lastUpdate: '2022-03-30T21:22:00.000Z'
              consumer:
              - id: TST-MNP-003
              securityMarking:
                securityPolicy: NATO
                securityClassification: UNCLASSIFIED
                releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only
    exampleEventNotificationServiceInstanceUpdate:
      summary: Example for an update Service Instance Notification
      value:
        eventType: ServiceInstanceAttributeValueChangeEvent
        eventTime: '2019-02-26T18:38:27.248Z'
        eventId: TST-MNP-002-PUB-193174478000
        event:
          serviceInstance:
            id: TST-MNP-002-SVI-BWA403-002
            state: phaseOut
            federatedServiceInstanceExtension:
              instanceOf: TST-MNP-002-SVC-BAW403
              lastUpdate: '2022-03-30T21:22:00.000Z'
              consumer:
              - id: TST-MNP-003
              securityMarking:
                securityPolicy: NATO
                securityClassification: UNCLASSIFIED
                releasabilityCommunity: AUS,AUT,CHE,FIN,NZL,SWE,UKR,EU EEAS only
    exampleEventNotificationResponse:
      summary: Notification response
      value: {}
    ################ Examples for error responses ################      
    exampleError400:
      summary: Error response with response code 400
      value:
        code: 400-000
        reason: Bad Request
        message: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)
        status: "400"
        referenceError: https://mnp.api.host:443/context/serviceInventoryManagement/v5.0/error/ERR_20220521093511163
    exampleError404:
      summary: Error response with response code 404
      value:
        code: 404-000
        reason: Not Found
        message: The origin server did not find a current representation for the target resource or is not willing to disclose that one exists
        status: "404"
        referenceError: https://mnp.api.host:443/context/serviceInventoryManagement/v5.0/error/ERR_20220521093511164
    exampleError500:
      summary: Error response with response code 500
      value:
        code: 500-000
        reason: Internal Server Error
        message: The server encountered an unexpected condition that prevented it from fulfilling the request --> for details see referenceError
        status: "500"
        referenceError: https://mnp.api.host:443/context/serviceInventoryManagement/v5.0/error/ERR_20220521093511165
