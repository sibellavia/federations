/*
FHSOperator API

Testing FHSOperatorCoreAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_FHSOperatorCoreAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test FHSOperatorCoreAPIService DeleteFedAdmin", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var memberId string

		httpRes, err := apiClient.FHSOperatorCoreAPI.DeleteFedAdmin(context.Background(), memberId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FHSOperatorCoreAPIService DeleteFederation", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var fedId string

		httpRes, err := apiClient.FHSOperatorCoreAPI.DeleteFederation(context.Background(), fedId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FHSOperatorCoreAPIService ListFedAdmins", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.FHSOperatorCoreAPI.ListFedAdmins(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FHSOperatorCoreAPIService ListFedInstances", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.FHSOperatorCoreAPI.ListFedInstances(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FHSOperatorCoreAPIService NewFedAdmin", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.FHSOperatorCoreAPI.NewFedAdmin(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FHSOperatorCoreAPIService UpdateFedAdmin", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var memberId string

		httpRes, err := apiClient.FHSOperatorCoreAPI.UpdateFedAdmin(context.Background(), memberId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FHSOperatorCoreAPIService UpdateFedInstance", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var fedId string

		httpRes, err := apiClient.FHSOperatorCoreAPI.UpdateFedInstance(context.Background(), fedId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
